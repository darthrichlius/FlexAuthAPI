var o=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports);var p=o((R,u)=>{u.exports={APP_DEBUG_PREFIX:"auth-db"}});var t=o((B,g)=>{var{appDebugger:a}=require("@app/lib/utils"),{APP_DEBUG_PREFIX:M}=p();g.exports={info:a(`${M}:info`),error:a(`${M}:error`)}});var q=o((y,O)=>{var C=require("mongoose"),s=t(),c,_=(e,r)=>{try{let n=C.createConnection(e,r);return n.on("close",()=>s.info("MongoDb: Connection CLOSED")),n.on("connected",()=>s.info("MongoDB: CONNECTED")),n}catch{s.error("Could not connect to MongoDB"),process.env.ENV!=="development"&&process.exit(1)}},E=()=>{let e={serverSelectionTimeoutMS:process.env.MONGO_TIMEOUTMS||3e4,connectTimeoutMS:process.env.MONGO_TIMEOUTMS||3e4};return c=_(process.env.MONGO_URI,e),c},x=()=>c||E();O.exports={connect:E,getClient:x}});var h=o(($,d)=>{d.exports=e=>{}});var f=o((w,l)=>{var G=t(),T=["DEBUG","MONGO_URI","MONGO_TIMEOUTMS"],N=()=>T.find(r=>{if(!process.env[r])return G.error(`Missing required env var: ${r}`),!0});l.exports=()=>{let e=!0;if(N())throw e=!1,new Error("RuntimeError: missing required Env");e||process.exit(1)}});var D=o((A,m)=>{var U=h(),b=f();m.exports={config:U,sanity:b}});var F=require("path"),{connect:I}=q(),P=(e,r)=>{D().sanity();let n=[];return r.map(i=>{let v=e.model(i.name,i.schema);n.push(v)}),n};module.exports={connect:I,attach:P};
