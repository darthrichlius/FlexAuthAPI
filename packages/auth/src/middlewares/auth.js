const _=require("lodash"),tokenManager=require("../managers/token"),authenticated=async(e,s,n)=>{const t=process.env.JWT_SECRET;if(!t)throw new Error("Missing JWT_SECRET");const r=e.header("x-app-auth-access-token");if(!r)return s.status(400).send("Access denied. Missing required token");const d=tokenManager.verify(r,t);if(!d)return s.status(400).send("Access denied. Bad token");const o=await tokenManager.getUserFromTokenPayload(d);if(!o)return s.status(400).send("Access denied. Gone");e.accessToken=r,e.user=o,n()},authorized=(e=[])=>async(s,n,t)=>{if(!s.user)return n.status(400).send("Unauthorized: Access denied");if(e.length===0)return t();if(_.intersection(s.user.roles,e).length===0)return n.status(403).send("Forbidden: Access denied");t()},hasSetupMFA=(e,s,n)=>{if(!e.user)return s.status(400).send("Unauthorized: Access denied");if(e.user.mfaVerified!==!0)return s.status(400).send("Forbidden: Access denied");n()};module.exports={authenticated,authorized,hasSetupMFA};
