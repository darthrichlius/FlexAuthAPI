const jwt=require("jsonwebtoken"),{getModels}=require("../globals/models"),_getModel=()=>getModels().User,generateAccessTokenPayload=e=>e.getAccessTokenPayload(),generateMfaAccessTokenChallengePayload=e=>e.getMfaAccessTokenPayload(),createAccessToken=(e,s)=>jwt.sign(e,s),verify=(e,s)=>{try{return jwt.verify(e,s)}catch{return}},isValidMfaAccessToken=(e,s)=>{const n=verify(e,s);return n?n.type==="mfaAccessToken"?n:null:!1},isValidAccessToken=(e,s)=>{const n=verify(e,s);return n?n.type==="accessToken"?n:null:!1},generateDefaultAccessTokenPayload=(e,s)=>{const n=generateAccessTokenPayload(e);return createAccessToken(n,s)},getUserFromTokenPayload=async e=>{const s="email";return await _getModel().findOne({[s]:e[s]})};module.exports={createAccessToken,generateAccessTokenPayload,generateDefaultAccessTokenPayload,getUserFromTokenPayload,generateMfaAccessTokenChallengePayload,isValidAccessToken,isValidMfaAccessToken,verify};
