const _=require("lodash"),router=require("express").Router(),{validate:validateSchema}=require("@app/lib/api/helpers"),{asyncError}=require("@app/lib/middlewares"),{loginSchema}=require("../model/auth"),{userManager,passwordManager,tokenManager}=require("../managers"),postAuth=async(s,e)=>{const r=validateSchema(loginSchema,s.body);if(r)return e.status(400).send(JSON.stringify(r));const a=await userManager.exists({email:s.body.username});if(!a)return e.status(404).send("Invalid credentials");if(!await passwordManager.verify(s.body.password,a.password))return e.status(401).send("Invalid credentials");const t=tokenManager.defineAccessTokenPayload(a),n=await tokenManager.createAccessToken(t,process.env.JWT_SECRET);return e.send(n)};router.post("/",asyncError(postAuth)),module.exports=router;
